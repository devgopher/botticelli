@page "/add_bot"
@using Botticelli.Shared.API.Client.Requests
@using Botticelli.Shared.Constants
@inject HttpClient Http
@using Botticelli.Server.FrontNew.Settings
@using Flurl
@using Microsoft.Extensions.Options
@using System.Net.Http.Headers
@inject NavigationManager UriHelper;
@inject IOptionsMonitor<BackSettings> BackSettings;
@inject CookieStorageAccessor Cookies;

<RadzenTemplateForm TItem="BotModel" Data=@_model Submit=@OnSubmit>
    <RadzenStack Orientation="Orientation.Horizontal">
        <RadzenText Text ="Bot key:"/>
        <RadzenTextBox Name="LastName" @bind-Value=@_model.BotKey/>
    </RadzenStack>
    <RadzenButton ButtonType="ButtonType.Submit" Text="Save" />
</RadzenTemplateForm>

@code {
    class BotModel
    {
        public string BotKey { get; set; }
    }

    readonly BotModel _model = new();
    
    private async Task OnSubmit(BotModel model)
    {
        var request = new RegisterBotRequest
            {
                BotId = Guid.NewGuid().ToString(),
                BotKey = model.BotKey,
                Type = BotType.Telegram
            };

        var sessionToken = await Cookies.GetValueAsync("SessionToken");

        if (string.IsNullOrWhiteSpace(sessionToken)) return;

        Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", sessionToken);
        await Http.PostAsJsonAsync( Url.Combine(BackSettings.CurrentValue.BackUrl, "/admin/AddNewBot"),
                                    JsonContent.Create(request));

        UriHelper.NavigateTo("/your_bots", true);
    }
}